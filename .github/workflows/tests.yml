name: Test Xbot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    environment: xbot-env

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-mock
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$/src" >> $GITHUB_ENV
          echo "PYTHONPATH=$/src"
      - name: Create credentials.json
        env:
          FIRE_CREDENTIALS: ${{ secrets.FIRE_CREDENTIALS }}
        run: echo "${{ secrets.FIRE_CREDENTIALS }}" | base64 --decode > $GITHUB_WORKSPACE/credentials.json
      - name: Set environment variables
        run: |
          echo "FIREBASE_URL=${{ secrets.FIREBASE_URL }}" >> $GITHUB_ENV
          echo "TWILIO_SID=${{ secrets.TWILIO_SID }}" >> $GITHUB_ENV
          echo "TWILIO_TOKEN=${{ secrets.TWILIO_TOKEN }}" >> $GITHUB_ENV
          echo "NUMBER_FROM=${{ secrets.NUMBER_FROM }}" >> $GITHUB_ENV
          echo "NUMBER_TO=${{ secrets.NUMBER_TO }}" >> $GITHUB_ENV
          echo "X_BEARERTOKEN=${{ secrets.X_BEARERTOKEN }}" >> $GITHUB_ENV
          echo "X_APIKEY=${{ secrets.X_APIKEY }}" >> $GITHUB_ENV
          echo "X_APISECRET=${{ secrets.X_APISECRET }}" >> $GITHUB_ENV
          echo "X_TOKEN=${{ secrets.X_TOKEN }}" >> $GITHUB_ENV
          echo "X_TOKENSECRET=${{ secrets.X_TOKENSECRET }}" >> $GITHUB_ENV
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest src
